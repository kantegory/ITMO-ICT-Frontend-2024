{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  __name: 'RegisterLogin',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const name = ref('');\n    const email = ref('');\n    const password = ref('');\n    const loginEmail = ref('');\n    const loginPassword = ref('');\n    const router = useRouter();\n    const registerUser = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/users');\n        const users = response.data;\n        const emailExists = users.some(user => user.email === email.value);\n        if (emailExists) {\n          alert('Пользователь с такой почтой уже существует.');\n          return;\n        }\n        const newUser = {\n          name: name.value,\n          email: email.value,\n          password: password.value\n        };\n        await axios.post('http://localhost:3000/users', newUser);\n        alert('Пользователь успешно зарегистрирован!');\n        name.value = '';\n        email.value = '';\n        password.value = '';\n      } catch (error) {\n        console.error(error);\n        alert('Ошибка при регистрации.');\n      }\n    };\n    const loginUser = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/users', {\n          params: {\n            email: loginEmail.value,\n            password: loginPassword.value\n          }\n        });\n        if (response.data.length > 0) {\n          const user = response.data[0];\n          if (user.password === loginPassword.value) {\n            alert(`Добро пожаловать, ${user.name}!`);\n            router.push('/');\n          } else {\n            alert('Неверный пароль.');\n          }\n        } else {\n          alert('Пользователь не найден.');\n        }\n      } catch (error) {\n        console.error(error);\n        alert('Ошибка при входе.');\n      }\n    };\n    const addBodyClass = () => {\n      document.body.classList.add('login-page');\n    };\n    const removeBodyClass = () => {\n      document.body.classList.remove('login-page');\n    };\n    onMounted(addBodyClass);\n\n    // Удаление класса перед размонтированием компонента\n    onBeforeUnmount(removeBodyClass);\n    const __returned__ = {\n      name,\n      email,\n      password,\n      loginEmail,\n      loginPassword,\n      router,\n      registerUser,\n      loginUser,\n      addBodyClass,\n      removeBodyClass,\n      ref,\n      onMounted,\n      onBeforeUnmount,\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onBeforeUnmount","useRouter","axios","name","email","password","loginEmail","loginPassword","router","registerUser","response","get","users","data","emailExists","some","user","value","alert","newUser","post","error","console","loginUser","params","length","push","addBodyClass","document","body","classList","add","removeBodyClass","remove"],"sources":["C:/Users/Vllazebnyi/ITMO-ICT-Frontend-2024/labs/K3344/Лазебный Всеволод/lab2/src/components/RegisterLogin.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\n\r\nconst name = ref('');\r\nconst email = ref('');\r\nconst password = ref('');\r\nconst loginEmail = ref('');\r\nconst loginPassword = ref('');\r\n\r\nconst router = useRouter();\r\n\r\nconst registerUser = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:3000/users');\r\n    const users = response.data;\r\n    const emailExists = users.some(user => user.email === email.value);\r\n\r\n    if (emailExists) {\r\n      alert('Пользователь с такой почтой уже существует.');\r\n      return;\r\n    }\r\n\r\n    const newUser = {\r\n      name: name.value,\r\n      email: email.value,\r\n      password: password.value\r\n    };\r\n\r\n    await axios.post('http://localhost:3000/users', newUser);\r\n    alert('Пользователь успешно зарегистрирован!');\r\n\r\n    name.value = '';\r\n    email.value = '';\r\n    password.value = '';\r\n  } catch (error) {\r\n    console.error(error);\r\n    alert('Ошибка при регистрации.');\r\n  }\r\n};\r\n\r\nconst loginUser = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:3000/users', {\r\n      params: {\r\n        email: loginEmail.value,\r\n        password: loginPassword.value\r\n      }\r\n    });\r\n\r\n    if (response.data.length > 0) {\r\n      const user = response.data[0];\r\n      if (user.password === loginPassword.value) {\r\n        alert(`Добро пожаловать, ${user.name}!`);\r\n        router.push('/');\r\n      } else {\r\n        alert('Неверный пароль.');\r\n      }\r\n    } else {\r\n      alert('Пользователь не найден.');\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    alert('Ошибка при входе.');\r\n  }\r\n};\r\n\r\nconst addBodyClass = () => {\r\n  document.body.classList.add('login-page');\r\n};\r\n\r\nconst removeBodyClass = () => {\r\n  document.body.classList.remove('login-page');\r\n};\r\n\r\nonMounted(addBodyClass);\r\n\r\n// Удаление класса перед размонтированием компонента\r\nonBeforeUnmount(removeBodyClass);\r\n</script>\r\n\r\n<template>\r\n  <div class=\"main\">\r\n    <input type=\"checkbox\" id=\"chk\" class=\"chk\" aria-hidden=\"true\">\r\n\r\n    <div class=\"signup\">\r\n      <form @submit.prevent=\"registerUser\">\r\n        <label for=\"chk\" aria-hidden=\"true\">Регистрация</label>\r\n        <input type=\"text\" v-model=\"name\" placeholder=\"Имя\" required autocomplete=\"name\">\r\n        <input type=\"email\" v-model=\"email\" placeholder=\"Почта\" required autocomplete=\"email\">\r\n        <input type=\"password\" v-model=\"password\" placeholder=\"Пароль\" required autocomplete=\"new-password\">\r\n        <button type=\"submit\" id=\"submit\">Регистрация</button>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"login\">\r\n      <form @submit.prevent=\"loginUser\">\r\n        <label for=\"chk\" aria-hidden=\"true\">Вход</label>\r\n        <input type=\"email\" v-model=\"loginEmail\" placeholder=\"Почта\" required>\r\n        <input type=\"password\" v-model=\"loginPassword\" placeholder=\"Пароль\" required>\r\n        <button>Вход</button>\r\n        <div class=\"social\">\r\n          <a href=\"#\" class=\"social-icon\"><i class=\"fab fa-facebook-f\"></i></a>\r\n          <a href=\"#\" class=\"social-icon\"><i class=\"fab fa-instagram\"></i></a>\r\n          <a href=\"#\" class=\"social-icon\"><i class=\"fab fa-twitter\"></i></a>\r\n          <a href=\"#\" class=\"social-icon\"><i class=\"fab fa-vk\"></i></a>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\nhtml,\r\nbody {\r\n  background-image: url(\"../assets/image/main.jpg\");\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  background-attachment: fixed;\r\n  background-size: cover;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center; /* Исправлено */\r\n  min-height: 100vh;\r\n  font-family: 'Jost', sans-serif;\r\n}\r\n\r\n.main{\r\n  width: 350px;\r\n  height: 500px;\r\n  background: #212529;\r\n  overflow: hidden;\r\n  border-radius: 10px;\r\n  box-shadow: 5px 20px 50px rgba(0, 0, 0, 0.59);\r\n}\r\n\r\n.chk {\r\n  display: none; /* Это скроет checkbox */\r\n}\r\n\r\n.signup{\r\n  color: #fff;\r\n  text-align: center;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.signup label{\r\n  margin-top: 30px;\r\n  color: #fff;\r\n  font-size: 2.3em;\r\n  justify-content: center;\r\n  display: flex;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n\r\ninput{\r\n  width: 60%;\r\n  height: 45px;\r\n  background: #e0dede;\r\n  justify-content: center;\r\n  display: flex;\r\n  margin: 30px auto;\r\n  padding: 10px;\r\n  border: none;\r\n  outLine: none;\r\n  border-radius: 5px;\r\n}\r\n\r\nbutton{\r\n  width: 60%;\r\n  height: 40px;\r\n  margin: 10px auto;\r\n  justify-content: center;\r\n  display: block;\r\n  color: #fff;\r\n  background: #0d6cf9;\r\n  font-size: 1em;\r\n  font-weight: bold;\r\n  margin-top: 20px;\r\n  outLine: none;\r\n  border: none;\r\n  border-radius: 5px;\r\n  transition: .2s ease-in;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover{\r\n  background: #0d44f7;\r\n}\r\n\r\n.login{\r\n  height: 550px;\r\n  background: #eee;\r\n  border-radius: 60% / 10%;\r\n  transform: translateY(-180px);\r\n  transition: 1s ease-in-out;\r\n}\r\n\r\n.login label{\r\n  color: #0d6dfb;\r\n  font-size: 2.3em;\r\n  justify-content: center;\r\n  display: flex;\r\n  padding-top:10px;\r\n  margin-top: 60px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n\r\n#chk:checked ~ .login{\r\n  transform: translateY(-570px);\r\n}\r\n\r\n#chk:checked ~ .login label{\r\n  transform: scale(1);\r\n}\r\n\r\n#chk:checked ~ .signup label{\r\n  transform: scale(1);\r\n  transition: 1s ease-in-out;\r\n}\r\n\r\n.social {\r\n  text-align: center; /* Центрируем текст */\r\n  margin-top: 40px; /* Отступ сверху */\r\n}\r\n\r\n.social-icon {\r\n  color: #212529; /* Изменяем цвет значков на синий */\r\n  font-size: 24px; /* Размер значков */\r\n  margin: 0 10px; /* Отступы между значками */\r\n  text-decoration: none; /* Убираем подчеркивание */\r\n}\r\n\r\n.social-icon:hover {\r\n  color: #0d6cf9;\r\n}\r\n</style>"],"mappings":";;;AACA,SAASA,GAAG,EAAEC,SAAS,EAAEC,eAAe,QAAQ,KAAK;AACrD,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,IAAI,GAAGL,GAAG,CAAC,EAAE,CAAC;IACpB,MAAMM,KAAK,GAAGN,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMO,QAAQ,GAAGP,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMQ,UAAU,GAAGR,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMS,aAAa,GAAGT,GAAG,CAAC,EAAE,CAAC;IAE7B,MAAMU,MAAM,GAAGP,SAAS,CAAC,CAAC;IAE1B,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,6BAA6B,CAAC;QAC/D,MAAMC,KAAK,GAAGF,QAAQ,CAACG,IAAI;QAC3B,MAAMC,WAAW,GAAGF,KAAK,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACZ,KAAK,KAAKA,KAAK,CAACa,KAAK,CAAC;QAElE,IAAIH,WAAW,EAAE;UACfI,KAAK,CAAC,6CAA6C,CAAC;UACpD;QACF;QAEA,MAAMC,OAAO,GAAG;UACdhB,IAAI,EAAEA,IAAI,CAACc,KAAK;UAChBb,KAAK,EAAEA,KAAK,CAACa,KAAK;UAClBZ,QAAQ,EAAEA,QAAQ,CAACY;QACrB,CAAC;QAED,MAAMf,KAAK,CAACkB,IAAI,CAAC,6BAA6B,EAAED,OAAO,CAAC;QACxDD,KAAK,CAAC,uCAAuC,CAAC;QAE9Cf,IAAI,CAACc,KAAK,GAAG,EAAE;QACfb,KAAK,CAACa,KAAK,GAAG,EAAE;QAChBZ,QAAQ,CAACY,KAAK,GAAG,EAAE;MACrB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBH,KAAK,CAAC,yBAAyB,CAAC;MAClC;IACF,CAAC;IAED,MAAMK,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMb,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,6BAA6B,EAAE;UAC9Da,MAAM,EAAE;YACNpB,KAAK,EAAEE,UAAU,CAACW,KAAK;YACvBZ,QAAQ,EAAEE,aAAa,CAACU;UAC1B;QACF,CAAC,CAAC;QAEF,IAAIP,QAAQ,CAACG,IAAI,CAACY,MAAM,GAAG,CAAC,EAAE;UAC5B,MAAMT,IAAI,GAAGN,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;UAC7B,IAAIG,IAAI,CAACX,QAAQ,KAAKE,aAAa,CAACU,KAAK,EAAE;YACzCC,KAAK,CAAC,qBAAqBF,IAAI,CAACb,IAAI,GAAG,CAAC;YACxCK,MAAM,CAACkB,IAAI,CAAC,GAAG,CAAC;UAClB,CAAC,MAAM;YACLR,KAAK,CAAC,kBAAkB,CAAC;UAC3B;QACF,CAAC,MAAM;UACLA,KAAK,CAAC,yBAAyB,CAAC;QAClC;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBH,KAAK,CAAC,mBAAmB,CAAC;MAC5B;IACF,CAAC;IAED,MAAMS,YAAY,GAAGA,CAAA,KAAM;MACzBC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;IAC3C,CAAC;IAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;MAC5BJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACG,MAAM,CAAC,YAAY,CAAC;IAC9C,CAAC;IAEDlC,SAAS,CAAC4B,YAAY,CAAC;;IAEvB;IACA3B,eAAe,CAACgC,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}